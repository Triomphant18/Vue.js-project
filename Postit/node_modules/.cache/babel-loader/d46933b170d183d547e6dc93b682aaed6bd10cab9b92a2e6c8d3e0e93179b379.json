{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"box-border md:box-content\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" <div> \"), _createCommentVNode(\"       <ul>\\n        <div class=\\\"add\\\" v-if=\\\"!shownote\\\">\\n          <li>\\n            <div class=\\\"description add\\\">\\n              <img\\n                class=\\\"iconplus\\\"\\n                src=\\\"../assets/iconsplus.png\\\"\\n                alt=\\\"Forward Icone\\\"\\n                @click=\\\"addnote\\\"\\n              />\\n            </div>\\n          </li>\\n        </div>\\n        <div class=\\\"note\\\" v-if=\\\"shownote\\\">\\n          <li>\\n            <h2>\\n              <input\\n                v-model=\\\"task\\\"\\n                class=\\\"hide h2\\\"\\n                type=\\\"text\\\"\\n                placeholder=\\\"Add the title\\\"\\n                size=\\\"16\\\"\\n              />\\n            </h2>\\n            <br />\\n            <div class=\\\"hide\\\">\\n              <textarea\\n                v-model=\\\"desc\\\"\\n                name=\\\"\\\"\\n                id=\\\"\\\"\\n                cols=\\\"24\\\"\\n                rows=\\\"7\\\"\\n                class=\\\"areadescription\\\"\\n                placeholder=\\\"Add a description\\\"\\n              ></textarea>\\n            </div>\\n            <div class=\\\"flex\\\">\\n              <img\\n                v-if=\\\"shownote\\\"\\n                src=\\\"../assets/forward.png\\\"\\n                class=\\\"backward\\\"\\n                alt=\\\"Backward Icone\\\"\\n                @click=\\\"addnote\\\"\\n              />\\n              <div>\\n                <img\\n                  @click=\\\"\\n                    submitNote();\\n                    getNotes();\\n                  \\\"\\n                  src=\\\"../assets/approval.png\\\"\\n                  class=\\\"approuved\\\"\\n                  alt=\\\"Forward Icone\\\"\\n                />\\n              </div>\\n            </div>\\n          </li>\\n        </div> \"), $data.allNotes.length > 0 ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allNotes, note => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: note._id\n    }, [_createElementVNode(\"div\", null, _toDisplayString(note.title), 1 /* TEXT */), _createCommentVNode(\" <div\\n              class=\\\"description\\\"\\n            >\\n              {{\\n                note.content[0].length > 280\\n                  //? note.content[0].substring(0, 220) + \\\"...\\\"\\n                  : note.content[0]\\n              }} \"), _createCommentVNode(\" </div> \"), _createCommentVNode(\" <div class=\\\"flex\\\">\\n              <div>\\n                <router-link :to=\\\"{ name: 'detail', params: { id: note._id } }\\\">\\n                  <img src=\\\"../assets/forward.png\\\" alt=\\\"Forward Icone\\\" />\\n                </router-link>\\n              </div>\\n              <div>\\n                <img\\n                  class=\\\"delete\\\"\\n                  src=\\\"../assets/delete.png\\\"\\n                  alt=\\\"Forward Icone\\\"\\n                />\\n              </div> \"), _createCommentVNode(\" </div> \")]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" </ul> \")]), _createCommentVNode(\" </div> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","_createCommentVNode","$data","allNotes","length","_createElementBlock","_hoisted_2","_Fragment","_renderList","note","key","_id","_toDisplayString","title"],"sources":["/home/triomphant/Documents/TITA/MVVC/test2/mypostit/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"box-border md:box-content\">\n    <!-- <div> -->\n<!--       <ul>\n        <div class=\"add\" v-if=\"!shownote\">\n          <li>\n            <div class=\"description add\">\n              <img\n                class=\"iconplus\"\n                src=\"../assets/iconsplus.png\"\n                alt=\"Forward Icone\"\n                @click=\"addnote\"\n              />\n            </div>\n          </li>\n        </div>\n        <div class=\"note\" v-if=\"shownote\">\n          <li>\n            <h2>\n              <input\n                v-model=\"task\"\n                class=\"hide h2\"\n                type=\"text\"\n                placeholder=\"Add the title\"\n                size=\"16\"\n              />\n            </h2>\n            <br />\n            <div class=\"hide\">\n              <textarea\n                v-model=\"desc\"\n                name=\"\"\n                id=\"\"\n                cols=\"24\"\n                rows=\"7\"\n                class=\"areadescription\"\n                placeholder=\"Add a description\"\n              ></textarea>\n            </div>\n            <div class=\"flex\">\n              <img\n                v-if=\"shownote\"\n                src=\"../assets/forward.png\"\n                class=\"backward\"\n                alt=\"Backward Icone\"\n                @click=\"addnote\"\n              />\n              <div>\n                <img\n                  @click=\"\n                    submitNote();\n                    getNotes();\n                  \"\n                  src=\"../assets/approval.png\"\n                  class=\"approuved\"\n                  alt=\"Forward Icone\"\n                />\n              </div>\n            </div>\n          </li>\n        </div> -->\n\n        <ul v-if=\"allNotes.length > 0\">\n          <li v-for=\"note in allNotes\" :key=\"note._id\">\n            <div> {{ note.title }}</div>\n            <!-- <div\n              class=\"description\"\n            >\n              {{\n                note.content[0].length > 280\n                  //? note.content[0].substring(0, 220) + \"...\"\n                  : note.content[0]\n              }} -->\n            <!-- </div> -->\n            <!-- <div class=\"flex\">\n              <div>\n                <router-link :to=\"{ name: 'detail', params: { id: note._id } }\">\n                  <img src=\"../assets/forward.png\" alt=\"Forward Icone\" />\n                </router-link>\n              </div>\n              <div>\n                <img\n                  class=\"delete\"\n                  src=\"../assets/delete.png\"\n                  alt=\"Forward Icone\"\n                />\n              </div> -->\n            <!-- </div> -->\n          </li>\n        </ul>\n      <!-- </ul> -->\n    </div>\n  <!-- </div> -->\n</template>\n\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      task: \"\",\n      desc: \"\",\n      allNotes: [],\n      togglenote: true,\n      shownote: false,\n      addnotes: true,\n    };\n  },\n\n  name: \"Notes\",\n  mounted() {\n    this.getNotes();\n  },\n  methods: {\n    ...mapActions([\"getNotes\"]),\n/*     deleteNote(index) {\n      if (confirm(\"Are you sure you want to delete this note?\")) {\n        let noteId = this.allNotes[index]._id;\n        axios\n          .delete(`https://post-it-7m1i.onrender.com/notes/${noteId}`)\n          .then(() => {\n            this.getNotes();\n          });\n      }\n    },\n    submitNote() {\n      if (this.task.length == 0 || this.desc.length == 0) {\n        return;\n      }\n      axios\n        .post(\"https://post-it-7m1i.onrender.com/notes\", {\n          title: this.task,\n          content: this.desc,\n        })\n        .then(() => {\n          this.getNotes();\n        });\n\n      this.shownote = false;\n      this.task = \"\";\n      this.desc = \"\";\n    }, */\n  },\n  computed: {\n    ...mapGetters([\"allNotes\"]),\n  },\n  created() {\n    this.getNotes();\n  },\n};\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAA2B;;;;;6DAAtCC,mBAAA,CA0FQ,OA1FRC,UA0FQ,GAzFNC,mBAAA,WAAc,EAClBA,mBAAA,8qDAyDkB,EAEAC,KAAA,CAAAC,QAAQ,CAACC,MAAM,Q,cAAzBC,mBAAA,CA2BK,MAAAC,UAAA,I,kBA1BHD,mBAAA,CAyBKE,SAAA,QAAAC,WAAA,CAzBcN,KAAA,CAAAC,QAAQ,EAAhBM,IAAI;yBAAfJ,mBAAA,CAyBK;MAzByBK,GAAG,EAAED,IAAI,CAACE;QACtCZ,mBAAA,CAA4B,aAAAa,gBAAA,CAAnBH,IAAI,CAACI,KAAK,kBACnBZ,mBAAA,wPAOQ,EACRA,mBAAA,YAAe,EACfA,mBAAA,0dAYY,EACZA,mBAAA,YAAe,C;yEAGrBA,mBAAA,WAAc,C,GAElBA,mBAAA,YAAe,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}