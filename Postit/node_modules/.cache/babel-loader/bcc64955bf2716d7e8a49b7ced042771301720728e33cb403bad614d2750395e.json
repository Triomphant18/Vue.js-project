{"ast":null,"code":"import { mapGetters, mapActions } from \"vuex\";\nexport default {\n  props: [\"id\"],\n  data() {\n    return {\n      shownote: false,\n      desc: \"\",\n      tasks: [],\n      title: \"\",\n      content: \"\",\n      curNote: this.$route.params.id\n    };\n  },\n  name: \"Notes\",\n  mounted() {\n    this.getNotes();\n    this.display();\n  },\n  updated() {\n    this.getNotes();\n  },\n  methods: {\n    ...mapActions([\"getNotes\", \"submitNote\", \"deleteNote\", \"updateNote\"]),\n    addNote() {\n      this.shownote = !this.shownote;\n    },\n    async Notes() {\n      axios.get(`https://post-it-7m1i.onrender.com/notes/${this.curNote}`).then(res => {\n        this.tasks = res.data;\n      });\n    },\n    display() {\n      this.title = this.note.title;\n      console.log(this.note);\n      this.content = this.note.content;\n    },\n    submitNote() {\n      this.updateNote({\n        id: this.note._id,\n        title: this.title,\n        content: this.content\n      });\n    }\n  },\n  computed: {\n    ...mapGetters([\"allNotes\"])\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","props","data","shownote","desc","tasks","title","content","curNote","$route","params","id","name","mounted","getNotes","display","updated","methods","addNote","Notes","axios","get","then","res","note","console","log","submitNote","updateNote","_id","computed"],"sources":["/home/triomphant/Documents/TITA/MVVC/test2/mypostit/src/Notes/PostView.vue"],"sourcesContent":["<template>\n      <div class=\"container mx-auto\">\n        <div class=\"myflex\">\n          <router-link :to=\"{ name: 'home' }\">\n            <img src=\"../assets/forward.png\" class=\"back\" alt=\"Backward Icon\" />\n          </router-link>\n          <div class=\"newflex\">\n            <img\n              @click=\"console\"\n              src=\"../assets/edit.png\"\n              class=\"edit\"\n              alt=\"Edit Icon\"\n            />\n            <img\n              @click=\"deleteNote(note._id)\"\n              src=\"../assets/delete.png\"\n              alt=\"Delete Icon\"\n            />\n          </div>\n        </div>\n        <h2>\n          <input class=\"input\" type=\"text\"  v-model=\"tasks.title\" />\n        </h2>\n        <br />\n        <div class=\"description\">\n          <textarea\n            name=\"\"\n            id=\"\"\n            cols=\"30\"\n            rows=\"10\"\n            v-model=\"tasks.content[0]\"\n          ></textarea>\n        </div>\n        <div class=\"flex\">\n          <div>\n            <router-link :to=\"{ name: 'home' }\">\n            <img\n              @click=\"submitNote()\"\n              src=\"../assets/approval.png\"\n              class=\"approved\"\n              alt=\"Approve Icon\"\n            />\n            </router-link>            \n\n          </div>\n        </div>\n      </div>\n</template>\n\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  props: [\"id\"],\n  data() {\n    return {\n      shownote: false,\n      desc: \"\",\n      tasks: [],\n      title: \"\",\n      content: \"\",\n      curNote: this.$route.params.id,\n\n    };\n  },\n  name: \"Notes\",\n  mounted() {\n    this.getNotes();\n    this.display();\n  },\n  updated() {\n    this.getNotes();\n  },\n  methods: {\n    ...mapActions([\"getNotes\", \"submitNote\", \"deleteNote\", \"updateNote\"]),\n    addNote() {\n      this.shownote = !this.shownote;\n    },\n\n    async Notes() {\n      axios\n        .get(`https://post-it-7m1i.onrender.com/notes/${this.curNote}`)\n        .then((res) => {\n          this.tasks = res.data;\n        });\n    },\n\n    display() {\n      this.title = this.note.title;\n      console.log(this.note);\n      this.content = this.note.content;\n    },\n\n    submitNote() {\n      this.updateNote({\n        id: this.note._id,\n        title: this.title,\n        content: this.content,\n      });\n    },\n  },\n  computed: {\n    ...mapGetters([\"allNotes\"]),\n  },\n};\n</script>"],"mappings":"AAmDA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAe;EACbC,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,KAAK;MACfC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC;IAE9B,CAAC;EACH,CAAC;EACDC,IAAI,EAAE,OAAO;EACbC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,OAAO,EAAE;EAChB,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACF,QAAQ,EAAE;EACjB,CAAC;EACDG,OAAO,EAAE;IACP,GAAGjB,UAAU,CAAC,CAAC,UAAU,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;IACrEkB,OAAOA,CAAA,EAAG;MACR,IAAI,CAACf,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ;IAChC,CAAC;IAED,MAAMgB,KAAKA,CAAA,EAAG;MACZC,KAAI,CACDC,GAAG,CAAE,2CAA0C,IAAI,CAACb,OAAQ,EAAC,EAC7Dc,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAAClB,KAAI,GAAIkB,GAAG,CAACrB,IAAI;MACvB,CAAC,CAAC;IACN,CAAC;IAEDa,OAAOA,CAAA,EAAG;MACR,IAAI,CAACT,KAAI,GAAI,IAAI,CAACkB,IAAI,CAAClB,KAAK;MAC5BmB,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,IAAI,CAAC;MACtB,IAAI,CAACjB,OAAM,GAAI,IAAI,CAACiB,IAAI,CAACjB,OAAO;IAClC,CAAC;IAEDoB,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,UAAU,CAAC;QACdjB,EAAE,EAAE,IAAI,CAACa,IAAI,CAACK,GAAG;QACjBvB,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,OAAO,EAAE,IAAI,CAACA;MAChB,CAAC,CAAC;IACJ;EACF,CAAC;EACDuB,QAAQ,EAAE;IACR,GAAG/B,UAAU,CAAC,CAAC,UAAU,CAAC;EAC5B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}