{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      task: \"\",\n      desc: \"\",\n      tasks: [],\n      curNote: this.$route.params.id\n    };\n  },\n  mounted() {\n    this.getNotes();\n  },\n  methods: {\n    async getNotes() {\n      axios.get(`https://post-it-7m1i.onrender.com/notes/${this.curNote}`).then(res => {\n        this.tasks = res.data;\n      });\n    },\n    async deleteNote() {\n      if (confirm(\"Are you sure you want to delete this note?\")) {\n        axios.delete(`https://post-it-7m1i.onrender.com/notes/${this.curNote}`).then(res => {\n          this.$router.push('/');\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    },\n    submitNote() {\n      if (this.task.length == 0 || this.desc.length == 0) {\n        return;\n      }\n      if (this.desc.length > 300) {\n        this.desc = this.desc.substring(0, 300) + \" . . .\";\n      }\n      axios.post(\"https://post-it-7m1i.onrender.com/notes\", {\n        title: this.task,\n        content: this.desc\n      }).then(res => {\n        this.shownote = !this.shownote;\n        this.task = \"\";\n        this.desc = \"\";\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","task","desc","tasks","curNote","$route","params","id","mounted","getNotes","methods","get","then","res","deleteNote","confirm","delete","$router","push","catch","err","console","log","submitNote","length","substring","post","title","content","shownote"],"sources":["/home/triomphant/Documents/TITA/MVVC/test2/mypostit/src/Notes/PostView.vue"],"sourcesContent":["<template>\n  <div class=\"container mx-auto\">\n    <div class=\"myflex\">\n      <router-link :to=\"{name: 'home'}\">\n        <img src=\"../assets/forward.png\" class=\"back\" alt=\"Backward Icon\" />\n      </router-link>\n      <div class=\"newflex\">\n        <img src=\"../assets/edit.png\" class=\"edit\" alt=\"Edit Icon\" />\n        <img @click=\"deleteNote\" src=\"../assets/delete.png\" alt=\"Delete Icon\" />\n      </div>\n    </div>\n    <h2>  \n        <input .class type=\"text\" v-model=\"tasks.title\">\n    </h2>\n    <br />\n    <div class=\"description\" v-for=\"(noteline, i) in tasks.content\" :key=\"i\">\n      <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" v-model=\"tasks.content[i]\"></textarea>\n    </div>\n    <div class=\"flex\">\n      <div></div>\n      <div></div>\n      <div>\n        <img\n          @click=\"submitNote\"\n          src=\"../assets/approval.png\"\n          class=\"approved\"\n          alt=\"Approve Icon\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      task: \"\",\n      desc: \"\",\n      tasks: [],\n      curNote: this.$route.params.id,\n    };\n  },\n  mounted() {\n    this.getNotes();\n  },\n  methods: {\n    async getNotes() {\n      axios\n        .get(`https://post-it-7m1i.onrender.com/notes/${this.curNote}`)\n        .then((res) => {\n          this.tasks = res.data;\n        });\n    },\n    async deleteNote() {\n      if (confirm(\"Are you sure you want to delete this note?\")) {\n        axios\n          .delete(`https://post-it-7m1i.onrender.com/notes/${this.curNote}`)\n          .then((res) => {\n            this.$router.push('/');\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    },\n    submitNote() {\n      if (this.task.length == 0 || this.desc.length == 0) {\n        return;\n      }\n      if (this.desc.length > 300) {\n        this.desc = this.desc.substring(0, 300) + \" . . .\";\n      }\n      axios\n        .post(\"https://post-it-7m1i.onrender.com/notes\", {\n          title: this.task,\n          content: this.desc,\n        })\n        .then((res) => {\n          this.shownote = !this.shownote;\n          this.task = \"\";\n          this.desc = \"\";\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    },\n  },\n};\n</script>\n"],"mappings":";AAkCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC;IAC9B,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,EAAE;EACjB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,QAAQA,CAAA,EAAG;MACfV,KAAI,CACDY,GAAG,CAAE,2CAA0C,IAAI,CAACP,OAAQ,EAAC,EAC7DQ,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACV,KAAI,GAAIU,GAAG,CAACb,IAAI;MACvB,CAAC,CAAC;IACN,CAAC;IACD,MAAMc,UAAUA,CAAA,EAAG;MACjB,IAAIC,OAAO,CAAC,4CAA4C,CAAC,EAAE;QACzDhB,KAAI,CACDiB,MAAM,CAAE,2CAA0C,IAAI,CAACZ,OAAQ,EAAC,EAChEQ,IAAI,CAAEC,GAAG,IAAK;UACb,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QACxB,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAK;UACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAClB,CAAC,CAAC;MACN;IACF,CAAC;IACDG,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACtB,IAAI,CAACuB,MAAK,IAAK,KAAK,IAAI,CAACtB,IAAI,CAACsB,MAAK,IAAK,CAAC,EAAE;QAClD;MACF;MACA,IAAI,IAAI,CAACtB,IAAI,CAACsB,MAAK,GAAI,GAAG,EAAE;QAC1B,IAAI,CAACtB,IAAG,GAAI,IAAI,CAACA,IAAI,CAACuB,SAAS,CAAC,CAAC,EAAE,GAAG,IAAI,QAAQ;MACpD;MACA1B,KAAI,CACD2B,IAAI,CAAC,yCAAyC,EAAE;QAC/CC,KAAK,EAAE,IAAI,CAAC1B,IAAI;QAChB2B,OAAO,EAAE,IAAI,CAAC1B;MAChB,CAAC,EACAU,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACgB,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ;QAC9B,IAAI,CAAC5B,IAAG,GAAI,EAAE;QACd,IAAI,CAACC,IAAG,GAAI,EAAE;MAChB,CAAC,EACAiB,KAAK,CAAEC,GAAG,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}