{"ast":null,"code":"import { mapGetters, mapActions } from \"vuex\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      currentDate() {\n        const current = new Date();\n        return date;\n      },\n      togglenote: true,\n      shownote: false,\n      addnotes: true\n    };\n  },\n  name: \"Notes\",\n  mounted() {\n    this.getNotes();\n  },\n  methods: {\n    ...mapActions([\"getNotes\"]),\n    deleteNote(index) {\n      if (confirm(\"Are you sure you want to delete this note?\")) {\n        let noteId = this.allNotes[index]._id;\n        axios.delete(`https://post-it-7m1i.onrender.com/notes/${noteId}`).then(() => {\n          this.getNotes();\n        });\n      }\n    },\n    submitNote() {\n      if (this.note.length == 0 || this.desc.length == 0) {\n        return;\n      }\n      axios.post(\"https://post-it-7m1i.onrender.com/notes\", {\n        title: this.note,\n        content: this.desc\n      }).then(() => {\n        this.getNotes();\n      });\n      this.shownote = false;\n      this.note = \"\";\n      this.desc = \"\";\n    }\n  },\n  computed: {\n    ...mapGetters([\"allNotes\"])\n  },\n  created() {\n    this.getNotes();\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","axios","data","currentDate","current","Date","date","togglenote","shownote","addnotes","name","mounted","getNotes","methods","deleteNote","index","confirm","noteId","allNotes","_id","delete","then","submitNote","note","length","desc","post","title","content","computed","created"],"sources":["/home/triomphant/Documents/TITA/MVVC/test2/mypostit/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <div class=\"box-border md:box-content\">\n    <div>\n        <ul >      \n        <ul v-if=\"allNotesnotes.length > 0\">\n          <li ul v-for=\"note in allNotes.reverse()\" :key=\"note._id\">\n            <h2>\n              {{\n                note.title.length > 12\n                  ? note.title.substring(0, 12) + \"...\"\n                  : note.title\n              }}\n            </h2>\n            <div\n              class=\"description\"\n              v-for=\"(noteline, i) in note.content\"\n              :key=\"i\"\n            >\n              {{\n                noteline.length > 280\n                  ? noteline.substring(0, 220) + \"...\"\n                  : noteline\n              }}\n            </div>\n            <div class=\"flex\">\n              <div>\n                <!-- <router-link :to=\"{ name: 'detail', params: { id: note._id } }\"> -->\n                  <img src=\"../assets/forward.png\" alt=\"Forward Icone\" />\n                <!-- </router-link> -->\n              </div>\n              <div>\n                <img\n                  @click=\"deleteNote(index)\"\n                  class=\"delete\"\n                  src=\"../assets/delete.png\"\n                  alt=\"Forward Icone\"\n                />\n              </div>\n            </div>\n          </li>\n        </ul>\n      </ul>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      currentDate() {\n        const current = new Date();\n\n        return date;\n      },\n      togglenote: true,\n      shownote: false,\n      addnotes: true,\n    };\n  },\n\n  name: \"Notes\",\n  mounted() {\n    this.getNotes();\n  },\n  methods: {\n    ...mapActions([\"getNotes\"]),\n    deleteNote(index) {\n      if (confirm(\"Are you sure you want to delete this note?\")) {\n        let noteId = this.allNotes[index]._id;\n        axios\n          .delete(`https://post-it-7m1i.onrender.com/notes/${noteId}`)\n          .then(() => {\n            this.getNotes();\n          });\n      }\n    },\n    submitNote() {\n      if (this.note.length == 0 || this.desc.length == 0) {\n        return;\n      }\n      axios\n        .post(\"https://post-it-7m1i.onrender.com/notes\", {\n          title: this.note,\n          content: this.desc,\n        })\n        .then(() => {\n          this.getNotes();\n        });\n\n      this.shownote = false;\n      this.note = \"\";\n      this.desc = \"\";\n    },\n  },\n  computed: {\n    ...mapGetters([\"allNotes\"]),\n  },\n  created() {\n    this.getNotes();\n  },\n};\n</script>\n\n"],"mappings":"AAgDA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAC7C,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAWA,CAAA,EAAG;QACZ,MAAMC,OAAM,GAAI,IAAIC,IAAI,EAAE;QAE1B,OAAOC,IAAI;MACb,CAAC;MACDC,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EAEDC,IAAI,EAAE,OAAO;EACbC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,EAAE;EACjB,CAAC;EACDC,OAAO,EAAE;IACP,GAAGb,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC;IAC3Bc,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAIC,OAAO,CAAC,4CAA4C,CAAC,EAAE;QACzD,IAAIC,MAAK,GAAI,IAAI,CAACC,QAAQ,CAACH,KAAK,CAAC,CAACI,GAAG;QACrClB,KAAI,CACDmB,MAAM,CAAE,2CAA0CH,MAAO,EAAC,EAC1DI,IAAI,CAAC,MAAM;UACV,IAAI,CAACT,QAAQ,EAAE;QACjB,CAAC,CAAC;MACN;IACF,CAAC;IACDU,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACC,IAAI,CAACC,MAAK,IAAK,KAAK,IAAI,CAACC,IAAI,CAACD,MAAK,IAAK,CAAC,EAAE;QAClD;MACF;MACAvB,KAAI,CACDyB,IAAI,CAAC,yCAAyC,EAAE;QAC/CC,KAAK,EAAE,IAAI,CAACJ,IAAI;QAChBK,OAAO,EAAE,IAAI,CAACH;MAChB,CAAC,EACAJ,IAAI,CAAC,MAAM;QACV,IAAI,CAACT,QAAQ,EAAE;MACjB,CAAC,CAAC;MAEJ,IAAI,CAACJ,QAAO,GAAI,KAAK;MACrB,IAAI,CAACe,IAAG,GAAI,EAAE;MACd,IAAI,CAACE,IAAG,GAAI,EAAE;IAChB;EACF,CAAC;EACDI,QAAQ,EAAE;IACR,GAAG9B,UAAU,CAAC,CAAC,UAAU,CAAC;EAC5B,CAAC;EACD+B,OAAOA,CAAA,EAAG;IACR,IAAI,CAAClB,QAAQ,EAAE;EACjB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}