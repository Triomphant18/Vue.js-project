{"ast":null,"code":"import { mapGetters, mapActions } from \"vuex\";\nexport default {\n  props: ['id'],\n  data() {\n    return {\n      shownote: false,\n      desc: \"\",\n      note: \"\",\n      title: \"\",\n      content: \"\"\n    };\n  },\n  name: \"Notes\",\n  mounted() {\n    this.getNotes();\n    this.display();\n    console.log(\"mouted\");\n  },\n  updated() {\n    this.getNotes();\n  },\n  methods: {\n    ...mapActions([\"getNotes\", \"submitNote\", \"deleteNote\", \"updateNote\"]),\n    addNote() {\n      this.shownote = !this.shownote;\n    },\n    display() {\n      this.title = this.note.title;\n      this.content = this.note.content;\n    },\n    submitNote() {\n      this.updateNote({\n        id: this.note.id,\n        title: this.note.title,\n        content: this.note.content\n      });\n    }\n\n    /*     async onSubmit() {\n          this.shownote = !this.shownote;\n          if (this.note === \"\" || this.desc.trim() === \"\") {\n            return;\n          }\n          await this.submitNote({\n            title: this.note,\n            content: this.desc,\n          });\n          this.note = \"\";\n          this.desc = \"\";\n        }, */\n  },\n\n  computed: {\n    ...mapGetters([\"allNotes\"])\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","props","data","shownote","desc","note","title","content","name","mounted","getNotes","display","console","log","updated","methods","addNote","submitNote","updateNote","id","computed"],"sources":["/home/triomphant/Documents/TITA/MVVC/test2/mypostit/src/Notes/PostView.vue"],"sourcesContent":["<template>\n  <div v-for=\"note in allNotes\" :key=\"note._id\">\n    <div v-if=\"note._id == id\">\n      {{ this.note = note }}\n      <div class=\"container mx-auto\">\n        <div class=\"myflex\">\n          <router-link :to=\"{ name: 'home' }\">\n            <img src=\"../assets/forward.png\" class=\"back\" alt=\"Backward Icon\" />\n          </router-link>\n          <div class=\"newflex\">\n            <img @click=\"console\" src=\"../assets/edit.png\" class=\"edit\" alt=\"Edit Icon\" />\n            <img\n            @click=\"deleteNote(note._id)\"\n              src=\"../assets/delete.png\"\n              alt=\"Delete Icon\"\n            />\n          </div>\n        </div>\n        <h2>\n          <input class=\"input\" type=\"text\" v-model=\"title\" />\n        </h2>\n        <br />\n        <div class=\"description\">\n          <textarea\n            name=\"\"\n            id=\"\"\n            cols=\"30\"\n            rows=\"10\"\n            v-model=\"content\"\n          ></textarea>\n        </div>\n        <div class=\"flex\">\n          <div>\n            <img\n              @click=\"submitNote()\"\n              src=\"../assets/approval.png\"\n              class=\"approved\"\n              alt=\"Approve Icon\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  props: ['id'],\n  data() {\n    return {\n      shownote: false,\n      desc: \"\",\n      note: \"\",\n      title: \"\",\n      content: \"\"\n    };\n  },\n  name: \"Notes\",\n  mounted() {\n    this.getNotes();\n    this.display();\n    console.log(\"mouted\")\n  },\n  updated() {\n    this.getNotes();\n    \n  },\n  methods: {\n    ...mapActions([\"getNotes\", \"submitNote\", \"deleteNote\", \"updateNote\"]),\n    addNote() {\n      this.shownote = !this.shownote;\n    },\n\n    display() {\n      this.title = this.note.title;\n      this.content = this.note.content\n    },\n\n    submitNote(){\n      this.updateNote({id:this.note.id, title: this.note.title, content: this.note.content});\n    },\n\n/*     async onSubmit() {\n      this.shownote = !this.shownote;\n      if (this.note === \"\" || this.desc.trim() === \"\") {\n        return;\n      }\n      await this.submitNote({\n        title: this.note,\n        content: this.desc,\n      });\n      this.note = \"\";\n      this.desc = \"\";\n    }, */\n\n  },\n  computed: {\n    ...mapGetters([\"allNotes\"]),\n  },\n};\n</script>"],"mappings":"AAgDA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAe;EACbC,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,KAAK;MACfC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,IAAI,EAAE,OAAO;EACbC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,OAAO,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,QAAQ;EACtB,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACJ,QAAQ,EAAE;EAEjB,CAAC;EACDK,OAAO,EAAE;IACP,GAAGf,UAAU,CAAC,CAAC,UAAU,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;IACrEgB,OAAOA,CAAA,EAAG;MACR,IAAI,CAACb,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ;IAChC,CAAC;IAEDQ,OAAOA,CAAA,EAAG;MACR,IAAI,CAACL,KAAI,GAAI,IAAI,CAACD,IAAI,CAACC,KAAK;MAC5B,IAAI,CAACC,OAAM,GAAI,IAAI,CAACF,IAAI,CAACE,OAAM;IACjC,CAAC;IAEDU,UAAUA,CAAA,EAAE;MACV,IAAI,CAACC,UAAU,CAAC;QAACC,EAAE,EAAC,IAAI,CAACd,IAAI,CAACc,EAAE;QAAEb,KAAK,EAAE,IAAI,CAACD,IAAI,CAACC,KAAK;QAAEC,OAAO,EAAE,IAAI,CAACF,IAAI,CAACE;MAAO,CAAC,CAAC;IACxF;;IAEJ;;;;;;;;;;;;EAaE,CAAC;;EACDa,QAAQ,EAAE;IACR,GAAGrB,UAAU,CAAC,CAAC,UAAU,CAAC;EAC5B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}