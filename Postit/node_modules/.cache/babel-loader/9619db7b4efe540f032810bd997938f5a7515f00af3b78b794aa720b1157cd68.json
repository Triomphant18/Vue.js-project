{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  //components: { Cadran },\n  data() {\n    return {\n      currentDate() {\n        const current = new Date();\n        return date;\n      },\n      task: \"\",\n      desc: \"\",\n      tasks: [],\n      togglenote: true,\n      shownote: false,\n      addnotes: true\n    };\n  },\n  mounted() {\n    this.getNotes();\n  },\n  methods: {\n    async getNotes() {\n      axios.get(\"https://post-it-7m1i.onrender.com/notes\").then(res => {\n        this.tasks = res.data.notes;\n      });\n    },\n    addnote() {\n      this.shownote = !this.shownote;\n    },\n    async deleteNote(index) {\n      if (confirm(\"Are you sure you want to delete this note?\")) {\n        let noteId = this.tasks[index]._id;\n        axios.delete(`https://post-it-7m1i.onrender.com/notes/${noteId}`).then(res => {\n          this.tasks.splice(index, 1);\n        });\n      }\n    },\n    submitNote() {\n      if (this.task.length == 0 || this.desc.length == 0) {\n        return;\n      }\n      if (this.desc.length > 300) {\n        this.desc = this.desc.substring(0, 300) + \" . . .\";\n      }\n      axios.post(\"https://post-it-7m1i.onrender.com/notes\", {\n        title: this.task,\n        content: this.desc\n      });\n      this.shownote = !this.shownote;\n      this.task = \"\";\n      this.desc = \"\";\n    }\n  }\n};","map":{"version":3,"names":["axios","data","currentDate","current","Date","date","task","desc","tasks","togglenote","shownote","addnotes","mounted","getNotes","methods","get","then","res","notes","addnote","deleteNote","index","confirm","noteId","_id","delete","splice","submitNote","length","substring","post","title","content"],"sources":["/home/triomphant/Documents/TITA/MVVC/test2/mypostit/src/Notes/PostView.vue"],"sourcesContent":["<template>\n  <div class=\"box-border md:box-content\">\n    <ul>\n      <li>\n        .c\n        <h2>{{ task.title }}</h2>\n        <br />\n        <div class=\"description\" v-for=\"(noteline, i) in task.content\" :key=\"i\">\n          {{ noteline }}\n        </div>\n        <div class=\"flex\">\n          <div>\n            <router-link :to=\"{ name: 'detail' }\">\n              <img src=\"../assets/forward.png\" alt=\"Forward Icone\" />\n            </router-link>\n          </div>\n          <div>\n            <img\n              @click=\"deleteNote(index)\"\n              class=\"delete\"\n              src=\"../assets/delete.png\"\n              alt=\"Forward Icone\"\n            />\n          </div>\n        </div>\n      </li>\n    </ul>\n  </div>\n</template>\n\n\n<script>\nimport axios from \"axios\";\nexport default {\n  //components: { Cadran },\n  data() {\n    return {\n      currentDate() {\n        const current = new Date();\n\n        return date;\n      },\n      task: \"\",\n      desc: \"\",\n      tasks: [],\n      togglenote: true,\n      shownote: false,\n      addnotes: true,\n    };\n  },\n  mounted() {\n    this.getNotes();\n  },\n  methods: {\n    async getNotes() {\n      axios.get(\"https://post-it-7m1i.onrender.com/notes\").then((res) => {\n        this.tasks = res.data.notes;\n      });\n    },\n    addnote() {\n      this.shownote = !this.shownote;\n    },\n    async deleteNote(index) {\n      if (confirm(\"Are you sure you want to delete this note?\")) {\n        let noteId = this.tasks[index]._id;\n        axios\n          .delete(`https://post-it-7m1i.onrender.com/notes/${noteId}`)\n          .then((res) => {\n            this.tasks.splice(index, 1);\n          });\n      }\n    },\n    submitNote() {\n      if (this.task.length == 0 || this.desc.length == 0) {\n        return;\n      }\n      if (this.desc.length > 300) {\n        this.desc = this.desc.substring(0, 300) + \" . . .\";\n      }\n      axios.post(\"https://post-it-7m1i.onrender.com/notes\", {\n        title: this.task,\n        content: this.desc,\n      });\n\n      this.shownote = !this.shownote;\n      this.task = \"\";\n      this.desc = \"\";\n    },\n  },\n};\n</script>\n\n"],"mappings":"AAgCA,OAAOA,KAAI,MAAO,OAAO;AACzB,eAAe;EACb;EACAC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAWA,CAAA,EAAG;QACZ,MAAMC,OAAM,GAAI,IAAIC,IAAI,EAAE;QAE1B,OAAOC,IAAI;MACb,CAAC;MACDC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAE,KAAK;MACfC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,EAAE;EACjB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,QAAQA,CAAA,EAAG;MACfb,KAAK,CAACe,GAAG,CAAC,yCAAyC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;QACjE,IAAI,CAACT,KAAI,GAAIS,GAAG,CAAChB,IAAI,CAACiB,KAAK;MAC7B,CAAC,CAAC;IACJ,CAAC;IACDC,OAAOA,CAAA,EAAG;MACR,IAAI,CAACT,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ;IAChC,CAAC;IACD,MAAMU,UAAUA,CAACC,KAAK,EAAE;MACtB,IAAIC,OAAO,CAAC,4CAA4C,CAAC,EAAE;QACzD,IAAIC,MAAK,GAAI,IAAI,CAACf,KAAK,CAACa,KAAK,CAAC,CAACG,GAAG;QAClCxB,KAAI,CACDyB,MAAM,CAAE,2CAA0CF,MAAO,EAAC,EAC1DP,IAAI,CAAEC,GAAG,IAAK;UACb,IAAI,CAACT,KAAK,CAACkB,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;QAC7B,CAAC,CAAC;MACN;IACF,CAAC;IACDM,UAAUA,CAAA,EAAG;MACX,IAAI,IAAI,CAACrB,IAAI,CAACsB,MAAK,IAAK,KAAK,IAAI,CAACrB,IAAI,CAACqB,MAAK,IAAK,CAAC,EAAE;QAClD;MACF;MACA,IAAI,IAAI,CAACrB,IAAI,CAACqB,MAAK,GAAI,GAAG,EAAE;QAC1B,IAAI,CAACrB,IAAG,GAAI,IAAI,CAACA,IAAI,CAACsB,SAAS,CAAC,CAAC,EAAE,GAAG,IAAI,QAAQ;MACpD;MACA7B,KAAK,CAAC8B,IAAI,CAAC,yCAAyC,EAAE;QACpDC,KAAK,EAAE,IAAI,CAACzB,IAAI;QAChB0B,OAAO,EAAE,IAAI,CAACzB;MAChB,CAAC,CAAC;MAEF,IAAI,CAACG,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ;MAC9B,IAAI,CAACJ,IAAG,GAAI,EAAE;MACd,IAAI,CAACC,IAAG,GAAI,EAAE;IAChB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}