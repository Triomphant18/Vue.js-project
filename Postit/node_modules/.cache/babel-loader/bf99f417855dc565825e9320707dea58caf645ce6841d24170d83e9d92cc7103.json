{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport axios from \"axios\";\nexport default createStore({\n  state: {\n    notes: []\n  },\n  getters: {\n    allNotes: state => state.notes,\n    notesdetail: state => state.notes.splice(index, 1, updNote)\n  },\n  actions: {\n    async getNotes({\n      commit\n    }) {\n      const res = await axios.get(\"https://post-it-7m1i.onrender.com/notes\");\n      commit('setNotes', res.data.notes.reverse());\n    },\n    async submitNote({\n      commit,\n      dispatch\n    }, loadnote) {\n      const res = await axios.post(\"https://post-it-7m1i.onrender.com/notes\", loadnote);\n      commit('newPost', res.data);\n      dispatch('getNotes'); // dispatch the getNotes action to update the notes list after submitting a new note\n    },\n\n    async deleteNote({\n      commit,\n      dispatch\n    }, id) {\n      if (confirm(\"Are you sure you want to delete this note?\")) {\n        await axios.delete(`https://post-it-7m1i.onrender.com/notes/${id}`);\n        commit('removeNote', id);\n      }\n    },\n    async updateNote({\n      commit\n    }, updNote) {\n      const res = await axios.put(`https://post-it-7m1i.onrender.com/notes/${updNote.id}`);\n      commit('updNote', updNote);\n    }\n  },\n  mutations: {\n    setNotes: (state, notes) => state.notes = notes,\n    newPost: (state, note) => state.notes.push(note),\n    removeNote: (state, id) => state.notes = state.notes.filter(note => note.id != id),\n    updateNote: (state, updNote) => {\n      const index = state.notes.findIndex(note => note.id === updNote.id);\n      if (index !== -1) {\n        state.notes.splice(index, 1, updNote);\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","axios","state","notes","getters","allNotes","notesdetail","splice","index","updNote","actions","getNotes","commit","res","get","data","reverse","submitNote","dispatch","loadnote","post","deleteNote","id","confirm","delete","updateNote","put","mutations","setNotes","newPost","note","push","removeNote","filter","findIndex","modules"],"sources":["/home/triomphant/Documents/TITA/MVVC/test2/mypostit/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport axios from \"axios\"\n\nexport default createStore({\n  state: {\n    notes: [],\n  },\n  getters: {\n    allNotes: (state) => state.notes,\n    notesdetail: (state) => state.notes.splice(index, 1, updNote)\n  },\n  actions: {\n    async getNotes({ commit }) {\n      const res = await axios.get(\"https://post-it-7m1i.onrender.com/notes\");\n      commit('setNotes', res.data.notes.reverse())\n    },\n    async submitNote({ commit, dispatch }, loadnote) {\n      const res = await axios.post(\"https://post-it-7m1i.onrender.com/notes\", loadnote)\n      commit('newPost', res.data);\n      dispatch('getNotes'); // dispatch the getNotes action to update the notes list after submitting a new note\n    },\n    async deleteNote({ commit, dispatch }, id) {\n      if (confirm(\"Are you sure you want to delete this note?\")) {\n        await axios.delete(`https://post-it-7m1i.onrender.com/notes/${id}`);\n        commit('removeNote', id);\n      }\n    },\n    async updateNote({ commit }, updNote) {\n      const res = await axios.put(`https://post-it-7m1i.onrender.com/notes/${updNote.id}`);\n      commit('updNote', updNote)\n    }\n  },\n  mutations: {\n    setNotes: (state, notes) => state.notes = notes,\n    newPost: (state, note) => state.notes.push(note),\n    removeNote: (state, id) => state.notes = state.notes.filter(note => note.id != id),\n    updateNote: (state, updNote) => {\n      const index = state.notes.findIndex(note => note.id === updNote.id);\n      if (index !== -1) {\n        state.notes.splice(index, 1, updNote);\n      }\n    },\n  },\n  modules: {\n  }\n})\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,KAAK,EAAE;EACT,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQ,EAAGH,KAAK,IAAKA,KAAK,CAACC,KAAK;IAChCG,WAAW,EAAGJ,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACI,MAAM,CAACC,KAAK,EAAE,CAAC,EAAEC,OAAO;EAC9D,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACzB,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,yCAAyC,CAAC;MACtEF,MAAM,CAAC,UAAU,EAAEC,GAAG,CAACE,IAAI,CAACZ,KAAK,CAACa,OAAO,EAAE,CAAC;IAC9C,CAAC;IACD,MAAMC,UAAUA,CAAC;MAAEL,MAAM;MAAEM;IAAS,CAAC,EAAEC,QAAQ,EAAE;MAC/C,MAAMN,GAAG,GAAG,MAAMZ,KAAK,CAACmB,IAAI,CAAC,yCAAyC,EAAED,QAAQ,CAAC;MACjFP,MAAM,CAAC,SAAS,EAAEC,GAAG,CAACE,IAAI,CAAC;MAC3BG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;IACxB,CAAC;;IACD,MAAMG,UAAUA,CAAC;MAAET,MAAM;MAAEM;IAAS,CAAC,EAAEI,EAAE,EAAE;MACzC,IAAIC,OAAO,CAAC,4CAA4C,CAAC,EAAE;QACzD,MAAMtB,KAAK,CAACuB,MAAM,CAAE,2CAA0CF,EAAG,EAAC,CAAC;QACnEV,MAAM,CAAC,YAAY,EAAEU,EAAE,CAAC;MAC1B;IACF,CAAC;IACD,MAAMG,UAAUA,CAAC;MAAEb;IAAO,CAAC,EAAEH,OAAO,EAAE;MACpC,MAAMI,GAAG,GAAG,MAAMZ,KAAK,CAACyB,GAAG,CAAE,2CAA0CjB,OAAO,CAACa,EAAG,EAAC,CAAC;MACpFV,MAAM,CAAC,SAAS,EAAEH,OAAO,CAAC;IAC5B;EACF,CAAC;EACDkB,SAAS,EAAE;IACTC,QAAQ,EAAEA,CAAC1B,KAAK,EAAEC,KAAK,KAAKD,KAAK,CAACC,KAAK,GAAGA,KAAK;IAC/C0B,OAAO,EAAEA,CAAC3B,KAAK,EAAE4B,IAAI,KAAK5B,KAAK,CAACC,KAAK,CAAC4B,IAAI,CAACD,IAAI,CAAC;IAChDE,UAAU,EAAEA,CAAC9B,KAAK,EAAEoB,EAAE,KAAKpB,KAAK,CAACC,KAAK,GAAGD,KAAK,CAACC,KAAK,CAAC8B,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACR,EAAE,IAAIA,EAAE,CAAC;IAClFG,UAAU,EAAEA,CAACvB,KAAK,EAAEO,OAAO,KAAK;MAC9B,MAAMD,KAAK,GAAGN,KAAK,CAACC,KAAK,CAAC+B,SAAS,CAACJ,IAAI,IAAIA,IAAI,CAACR,EAAE,KAAKb,OAAO,CAACa,EAAE,CAAC;MACnE,IAAId,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBN,KAAK,CAACC,KAAK,CAACI,MAAM,CAACC,KAAK,EAAE,CAAC,EAAEC,OAAO,CAAC;MACvC;IACF;EACF,CAAC;EACD0B,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}