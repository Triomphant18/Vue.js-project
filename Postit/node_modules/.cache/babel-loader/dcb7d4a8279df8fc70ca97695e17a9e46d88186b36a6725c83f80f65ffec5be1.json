{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Cadran from \"../components/Cadran.vue\";\nexport default {\n  components: {\n    Cadran\n  },\n  data() {\n    return {\n      currentDate() {\n        const current = new Date();\n        const date = `${current.getDate()}/${current.getMonth() + 1}/${current.getFullYear()}`;\n        return date;\n      },\n      tasks: [{\n        title: \"Build an algorithm\",\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Incidunt, laboriosam! Corporis numquam autem esse! Architecto, tempora numquam sequi beatae impedit tempore alias fugit sunt maxime quis quisquam nemo temporibus est!'\n      }, {\n        title: \"Finish the course Introduction to Python\",\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Incidunt, laboriosam! Corporis numquam autem esse! Architecto, tempora numquam sequi beatae impedit tempore alias fugit sunt maxime quis quisquam nemo temporibus est!'\n      }, {\n        title: \"Finish the course Introduction to Python\",\n        description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Incidunt, laboriosam! Corporis numquam autem esse! Architecto, tempora numquam sequi beatae impedit tempore alias fugit sunt maxime quis quisquam nemo temporibus est!'\n      }],\n      togglenote: true\n    };\n  },\n  data() {\n    return {\n      task: '',\n      tasks: {\n        title: \"Build an algorithm\"\n      },\n      shownote: false,\n      addnotes: true\n    };\n  },\n  methods: {\n    addnote() {\n      this.shownote = !this.shownote;\n    },\n    submitNote() {\n      if (this.task.length == 0) {\n        console.log('lak');\n        return;\n      }\n      this.task.push({\n        title: this.task,\n        description: this.description\n      });\n    }\n  }\n};","map":{"version":3,"names":["Cadran","components","data","currentDate","current","Date","date","getDate","getMonth","getFullYear","tasks","title","description","togglenote","task","shownote","addnotes","methods","addnote","submitNote","length","console","log","push"],"sources":["/home/triomphant/Documents/TITA/MVVC/test2/mypostit/src/views/HomeView.vue"],"sourcesContent":["<template>\n    <RouteView> </RouteView>\n  <div class=\"box-border md:box-content\">\n    <ul>\n              <li v-for = \"(task, index) in tasks\" :key=\"index\">\n            <h2>{{ task.title }}</h2>\n            <p> Last modified: </p>\n            <div class=\"description\">\n                {{ task.description }}\n            </div>\n            <img src=\"../assets/forward.png\" alt=\"Forward Icone\" @click=\"editnote\">              \n        </li>  \n      <div>\n        <div class=\"add\" v-if ='!shownote'>\n          <li>\n            <div class=\"description add\" >\n              <img\n                class=\"iconplus\"\n                src=\"../assets/iconsplus.png\"\n                alt=\"Forward Icone\"\n                @click=\"addnote\"\n              />\n            </div>\n          </li>\n        </div>\n        <div class=\"note\" v-if=\"shownote\">\n          <li>\n            <h2>\n              <input v-model=\"task\" class=\"hide h2\" type=\"text\" placeholder=\"Add the title\" size = \"11\" />\n            </h2>\n            <p><input class=\"hide p\" type=\"text\" placeholder=\"subTitle\" size = \"16\"/></p>\n            <div class=\"hide\">\n              <textarea\n                name=\"\"\n                v-model=\"task\"\n                id=\"\"\n                cols=\"28\"\n                rows=\"7\"\n                class=\"areadescription\"\n                placeholder=\"Add a description\"\n              ></textarea>\n            </div>\n            <div class=\"flex\">\n              <img v-if=\"shownote\"\n                src=\"../assets/forward.png\"\n                class=\"backward\"\n                alt=\"Backward Icone\"\n                @click=\"addnote\"\n              />\n              <div >\n                <img @click=\"submitNote\" src=\"../assets/approval.png\" class=\"approuved\" alt=\"Forward Icone\"/>\n                <!-- <img src=\"../assets/forward.png\" class=\"confirm\" alt=\"Forward Icone\"/> -->\n              </div>\n            </div>\n          </li>\n        </div>\n      </div>\n    </ul>\n  </div>\n</template>\n\n\n<script>\nimport Cadran from \"../components/Cadran.vue\";\nexport default { components: { Cadran },\ndata() {\n        return {\n        currentDate() {\n        const current = new Date();\n        const date = `${current.getDate()}/${current.getMonth()+1}/${current.getFullYear()}`;\n        return date;\n        },\n        tasks: [\n            {\n                title: \"Build an algorithm\",\n                description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Incidunt, laboriosam! Corporis numquam autem esse! Architecto, tempora numquam sequi beatae impedit tempore alias fugit sunt maxime quis quisquam nemo temporibus est!',\n            },\n            {\n                title: \"Finish the course Introduction to Python\",\n                description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Incidunt, laboriosam! Corporis numquam autem esse! Architecto, tempora numquam sequi beatae impedit tempore alias fugit sunt maxime quis quisquam nemo temporibus est!',\n            },\n            {\n                title: \"Finish the course Introduction to Python\",\n                description: 'Lorem ipsum dolor sit amet consectetur adipisicing elit. Incidunt, laboriosam! Corporis numquam autem esse! Architecto, tempora numquam sequi beatae impedit tempore alias fugit sunt maxime quis quisquam nemo temporibus est!',\n            },\n            \n        ],\n\n      togglenote: true,\n    };\n  },\ndata() {\n  return {\n    task:'',\n    tasks: {\n      title: \"Build an algorithm\"\n    },\n    shownote : false,\n    addnotes : true,\n  }\n},\nmethods: {\n \n    addnote(){\n      this.shownote = !this.shownote;\n    },\n    submitNote(){\n      if(this.task.length == 0){console.log('lak'); return} \n      this.task.push({\n        title: this.task,\n        description: this.description,\n      })\n    }\n  }\n}\n</script>\n\n"],"mappings":";AA+DA,OAAOA,MAAK,MAAO,0BAA0B;AAC7C,eAAe;EAAEC,UAAU,EAAE;IAAED;EAAO,CAAC;EACvCE,IAAIA,CAAA,EAAG;IACC,OAAO;MACPC,WAAWA,CAAA,EAAG;QACd,MAAMC,OAAM,GAAI,IAAIC,IAAI,EAAE;QAC1B,MAAMC,IAAG,GAAK,GAAEF,OAAO,CAACG,OAAO,EAAG,IAAGH,OAAO,CAACI,QAAQ,EAAE,GAAC,CAAE,IAAGJ,OAAO,CAACK,WAAW,EAAG,EAAC;QACpF,OAAOH,IAAI;MACX,CAAC;MACDI,KAAK,EAAE,CACH;QACIC,KAAK,EAAE,oBAAoB;QAC3BC,WAAW,EAAE;MACjB,CAAC,EACD;QACID,KAAK,EAAE,0CAA0C;QACjDC,WAAW,EAAE;MACjB,CAAC,EACD;QACID,KAAK,EAAE,0CAA0C;QACjDC,WAAW,EAAE;MACjB,CAAC,CAEJ;MAEHC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACHX,IAAIA,CAAA,EAAG;IACL,OAAO;MACLY,IAAI,EAAC,EAAE;MACPJ,KAAK,EAAE;QACLC,KAAK,EAAE;MACT,CAAC;MACDI,QAAO,EAAI,KAAK;MAChBC,QAAO,EAAI;IACb;EACF,CAAC;EACDC,OAAO,EAAE;IAELC,OAAOA,CAAA,EAAE;MACP,IAAI,CAACH,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ;IAChC,CAAC;IACDI,UAAUA,CAAA,EAAE;MACV,IAAG,IAAI,CAACL,IAAI,CAACM,MAAK,IAAK,CAAC,EAAC;QAACC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;QAAE;MAAM;MACpD,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC;QACbZ,KAAK,EAAE,IAAI,CAACG,IAAI;QAChBF,WAAW,EAAE,IAAI,CAACA;MACpB,CAAC;IACH;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}