{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport Home from '../views/HomeView.vue';\nimport PostView from '../Notes/PostView.vue';\nconst routes = [{\n  path: '/',\n  name: 'home',\n  component: Home\n}, {\n  path: '/ostView',\n  name: 'PostView',\n  component: PostView\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  // component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n}];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Home","PostView","routes","path","name","component","router","history","process","env","BASE_URL"],"sources":["/home/triomphant/Documents/TITA/MVVC/test2/mypostit/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport Home from '../views/HomeView.vue'\nimport PostView from '../Notes/PostView.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: Home\n  },\n  {\n    path: '/ostView',\n    name: 'PostView',\n    component: PostView\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    // component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n  }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAE5C,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEL;AACb,CAAC,EACD;EACEG,IAAI,EAAE,UAAU;EAChBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEJ;EACX;EACA;EACA;EACA;AACF,CAAC,CACF;;AAED,MAAMK,MAAM,GAAGR,YAAY,CAAC;EAC1BS,OAAO,EAAER,gBAAgB,CAACS,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CR;AACF,CAAC,CAAC;AAEF,eAAeI,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}