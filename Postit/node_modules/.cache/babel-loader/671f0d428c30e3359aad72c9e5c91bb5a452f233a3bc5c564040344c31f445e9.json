{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.allNotes, note => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: note._id\n    }, [_createElementVNode(\"div\", null, _toDisplayString(note.title), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$data","allNotes","note","key","_id","_createElementVNode","_toDisplayString","title"],"sources":["/home/triomphant/Documents/TITA/MVVC/test2/mypostit/src/views/HomeView.vue"],"sourcesContent":["<template>\n    <ul>\n        <div v-for=\"note in allNotes\" :key=\"note._id\">\n        <div> {{ note.title }}</div>\n        </div>\n    </ul>\n</template>\n\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      task: \"\",\n      desc: \"\",\n      allNotes: [],\n      togglenote: true,\n      shownote: false,\n      addnotes: true,\n    };\n  },\n\n  name: \"Notes\",\n  mounted() {\n    this.getNotes();\n  },\n  methods: {\n    ...mapActions([\"getNotes\"]),\n/*     deleteNote(index) {\n      if (confirm(\"Are you sure you want to delete this note?\")) {\n        let noteId = this.allNotes[index]._id;\n        axios\n          .delete(`https://post-it-7m1i.onrender.com/notes/${noteId}`)\n          .then(() => {\n            this.getNotes();\n          });\n      }\n    },\n    submitNote() {\n      if (this.task.length == 0 || this.desc.length == 0) {\n        return;\n      }\n      axios\n        .post(\"https://post-it-7m1i.onrender.com/notes\", {\n          title: this.task,\n          content: this.desc,\n        })\n        .then(() => {\n          this.getNotes();\n        });\n\n      this.shownote = false;\n      this.task = \"\";\n      this.desc = \"\";\n    }, */\n  },\n  computed: {\n    ...mapGetters([\"allNotes\"]),\n  },\n  created() {\n    this.getNotes();\n  },\n};\n</script>"],"mappings":";;uBACIA,mBAAA,CAIK,c,kBAHDA,mBAAA,CAEMC,SAAA,QAAAC,WAAA,CAFcC,KAAA,CAAAC,QAAQ,EAAhBC,IAAI;yBAAhBL,mBAAA,CAEM;MAFyBM,GAAG,EAAED,IAAI,CAACE;QACzCC,mBAAA,CAA4B,aAAAC,gBAAA,CAAnBJ,IAAI,CAACK,KAAK,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}