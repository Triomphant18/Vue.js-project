{"ast":null,"code":"import { mapGetters, mapActions } from \"vuex\";\nexport default {\n  props: [\"id\"],\n  data() {\n    return {\n      shownote: false,\n      desc: \"\",\n      note: [],\n      title: \"\",\n      content: \"\",\n      curNote: this.$route.params.id\n    };\n  },\n  name: \"Notes\",\n  mounted() {\n    this.getNotes();\n    this.display();\n    this.Note();\n  },\n  updated() {\n    this.getNotes();\n  },\n  methods: {\n    ...mapActions([\"getNotes\", \"submitNote\", \"deleteNote\", \"updateNote\"]),\n    addNote() {\n      this.shownote = !this.shownote;\n    },\n    async Note() {\n      console.log(\"dsfkjdghl\");\n      axios.get(`https://post-it-7m1i.onrender.com/notes/${this.curNote}`).then(res => {\n        this.note = res.data;\n        console.log(this.note);\n      });\n    },\n    display() {\n      this.title = this.note.title;\n      this.content = this.note.content;\n    },\n    submitNote() {\n      this.updateNote({\n        id: this.note._id,\n        title: this.title,\n        content: this.content\n      });\n    }\n  },\n  computed: {\n    ...mapGetters([\"allNotes\"])\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","props","data","shownote","desc","note","title","content","curNote","$route","params","id","name","mounted","getNotes","display","Note","updated","methods","addNote","console","log","axios","get","then","res","submitNote","updateNote","_id","computed"],"sources":["/home/triomphant/Documents/TITA/MVVC/test2/mypostit/src/Notes/PostView.vue"],"sourcesContent":["<template>\n  <div v-for=\"note in allNotes\" :key=\"note._id\">\n    <div v-if=\"note._id == id\">\n      {{ (this.note = note) }}\n      <div class=\"container mx-auto\">\n        <div class=\"myflex\">\n          <router-link :to=\"{ name: 'home' }\">\n            <img src=\"../assets/forward.png\" class=\"back\" alt=\"Backward Icon\" />\n          </router-link>\n          <div class=\"newflex\">\n            <img\n              @click=\"console\"\n              src=\"../assets/edit.png\"\n              class=\"edit\"\n              alt=\"Edit Icon\"\n            />\n            <img\n              @click=\"deleteNote(note._id)\"\n              src=\"../assets/delete.png\"\n              alt=\"Delete Icon\"\n            />\n          </div>\n        </div>\n        <h2>\n          <input class=\"input\" type=\"text\" v-model=\"note.title\" />\n        </h2>\n        <br />\n        <div class=\"description\">\n          <textarea\n            name=\"\"\n            id=\"\"\n            cols=\"30\"\n            rows=\"10\"\n            v-model=\"note.content[0]\"\n          ></textarea>\n        </div>\n        <div class=\"flex\">\n          <div>\n            <router-link :to=\"{ name: 'home' }\">\n            <img\n              @click=\"submitNote()\"\n              src=\"../assets/approval.png\"\n              class=\"approved\"\n              alt=\"Approve Icon\"\n            />\n            </router-link>            \n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\n\n\nexport default {\n  props: [\"id\"],\n  data() {\n    return {\n      shownote: false,\n      desc: \"\",\n      note: [],\n      title: \"\",\n      content: \"\",\n      curNote: this.$route.params.id,\n    };\n  },\n  name: \"Notes\",\n  mounted() {\n    this.getNotes();\n    this.display();\n    this.Note();\n  },\n  updated() {\n    this.getNotes();\n  },\n  methods: {\n    ...mapActions([\"getNotes\", \"submitNote\", \"deleteNote\", \"updateNote\"]),\n    addNote() {\n      this.shownote = !this.shownote;\n    },\n    async Note() {\n      console.log(\"dsfkjdghl\")\n      axios\n        .get(`https://post-it-7m1i.onrender.com/notes/${this.curNote}`)\n        .then((res) => {\n          this.note = res.data;\n          console.log(this.note);\n        });\n    },\n    display() {\n      this.title = this.note.title;\n      this.content = this.note.content;\n    },\n\n    submitNote() {\n      this.updateNote({\n        id: this.note._id,\n        title: this.title,\n        content: this.content,\n      });\n    },\n  },\n  computed: {\n    ...mapGetters([\"allNotes\"]),\n  },\n};\n</script>"],"mappings":"AAwDA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAG7C,eAAe;EACbC,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,KAAK;MACfC,IAAI,EAAE,EAAE;MACRC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC;IAC9B,CAAC;EACH,CAAC;EACDC,IAAI,EAAE,OAAO;EACbC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,EAAE;IACf,IAAI,CAACC,OAAO,EAAE;IACd,IAAI,CAACC,IAAI,EAAE;EACb,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACH,QAAQ,EAAE;EACjB,CAAC;EACDI,OAAO,EAAE;IACP,GAAGlB,UAAU,CAAC,CAAC,UAAU,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;IACrEmB,OAAOA,CAAA,EAAG;MACR,IAAI,CAAChB,QAAO,GAAI,CAAC,IAAI,CAACA,QAAQ;IAChC,CAAC;IACD,MAAMa,IAAIA,CAAA,EAAG;MACXI,OAAO,CAACC,GAAG,CAAC,WAAW;MACvBC,KAAI,CACDC,GAAG,CAAE,2CAA0C,IAAI,CAACf,OAAQ,EAAC,EAC7DgB,IAAI,CAAEC,GAAG,IAAK;QACb,IAAI,CAACpB,IAAG,GAAIoB,GAAG,CAACvB,IAAI;QACpBkB,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChB,IAAI,CAAC;MACxB,CAAC,CAAC;IACN,CAAC;IACDU,OAAOA,CAAA,EAAG;MACR,IAAI,CAACT,KAAI,GAAI,IAAI,CAACD,IAAI,CAACC,KAAK;MAC5B,IAAI,CAACC,OAAM,GAAI,IAAI,CAACF,IAAI,CAACE,OAAO;IAClC,CAAC;IAEDmB,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,UAAU,CAAC;QACdhB,EAAE,EAAE,IAAI,CAACN,IAAI,CAACuB,GAAG;QACjBtB,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,OAAO,EAAE,IAAI,CAACA;MAChB,CAAC,CAAC;IACJ;EACF,CAAC;EACDsB,QAAQ,EAAE;IACR,GAAG9B,UAAU,CAAC,CAAC,UAAU,CAAC;EAC5B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}