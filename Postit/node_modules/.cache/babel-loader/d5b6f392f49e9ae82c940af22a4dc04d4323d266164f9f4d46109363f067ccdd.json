{"ast":null,"code":"\n// import axios from \"axios\";\n// export default {\n//   //components: { Cadran },\n//   data() {\n//     return {\n//       currentDate() {\n//         const current = new Date();\n\n//         return date;\n//       },\n//       task: \"\",\n//       desc: \"\",\n//       tasks: [],\n//       togglenote: true,\n//       shownote: false,\n//       addnotes: true,\n//     };\n//   },\n//   mounted() {\n//     this.getNotes();\n//   },\n//   // updated() {\n//   //   this.getNotes();\n//   // },\n//   methods: {\n//     getNotes() {\n//       axios.get(\"https://post-it-7m1i.onrender.com/notes\").then((res) => {\n//         this.tasks = res.data.notes;\n//       });\n//     },\n//     addnote() {\n//       this.shownote = !this.shownote;\n//     },\n//     deleteNote(index) {\n//       if (confirm(\"Are you sure you want to delete this note?\")) {\n//         let noteId = this.tasks[index]._id;\n//         axios\n//           .delete(`https://post-it-7m1i.onrender.com/notes/${noteId}`)\n//           .then((res) => {\n//             this.tasks.splice(index, 1);\n//           });\n//       }\n//     },\n//     submitNote() {\n//       if (this.task.length == 0 || this.desc.length == 0) {\n//         return;\n//       }\n//       axios.post(\"https://post-it-7m1i.onrender.com/notes\", {\n//         title: this.task,\n//         content: this.desc,\n//       });\n\n//       this.shownote = !this.shownote;\n//       this.task = \"\";\n//       this.desc = \"\";\n//     },\n//   },\n// };","map":{"version":3,"names":[],"sources":["/home/triomphant/Documents/TITA/MVVC/test2/mypostit/src/views/HomeView.vue"],"sourcesContent":["<template>\n  <!-- <div class=\"box-border md:box-content\">\n    <div>\n      <ul>\n        <div class=\"add\" v-if=\"!shownote\">\n          <li>\n            <div class=\"description add\">\n              <img\n                class=\"iconplus\"\n                src=\"../assets/iconsplus.png\"\n                alt=\"Forward Icone\"\n                @click=\"addnote\"\n              />\n            </div>\n          </li>\n        </div>\n        <div class=\"note\" v-if=\"shownote\">\n          <li>\n            <h2>\n              <input\n                v-model=\"task\"\n                class=\"hide h2\"\n                type=\"text\"\n                placeholder=\"Add the title\"\n                size=\"16\"\n              />\n            </h2>\n            <br />\n            <div class=\"hide\">\n              <textarea\n                v-model=\"desc\"\n                name=\"\"\n                id=\"\"\n                cols=\"24\"\n                rows=\"7\"\n                class=\"areadescription\"\n                placeholder=\"Add a description\"\n              ></textarea>\n            </div>\n            <div class=\"flex\">\n              <img\n                v-if=\"shownote\"\n                src=\"../assets/forward.png\"\n                class=\"backward\"\n                alt=\"Backward Icone\"\n                @click=\"addnote\"\n              />\n              <div>\n                <img\n                  @click=\"\n                    submitNote();\n                    getNotes();\n                  \"\n                  src=\"../assets/approval.png\"\n                  class=\"approuved\"\n                  alt=\"Forward Icone\"\n                />\n              </div>\n            </div>\n          </li>\n        </div>\n\n        <ul v-if=\"this.tasks.length > 0\">\n          <li v-for=\"(task, index) in tasks.reverse()\" :key=\"index\">\n            <h2>\n              {{\n                task.title.length > 12\n                  ? task.title.substring(0, 12) + \"...\"\n                  : task.title\n              }}\n            </h2>\n            <div\n              class=\"description\"\n              v-for=\"(noteline, i) in task.content\"\n              :key=\"i\"\n            >\n              {{\n                noteline.length > 280 ? noteline.substring(0, 220) + \"...\" : noteline\n              }}\n            </div>\n            <div class=\"flex\">\n              <div>\n                <router-link :to=\"{ name: 'detail', params: { id: task._id } }\">\n                  <img src=\"../assets/forward.png\" alt=\"Forward Icone\" />\n                </router-link>\n              </div>\n              <div>\n                <img\n                  @click=\"deleteNote(index)\"\n                  class=\"delete\"\n                  src=\"../assets/delete.png\"\n                  alt=\"Forward Icone\"\n                />\n              </div>\n            </div>\n          </li>\n        </ul>\n      </ul>\n    </div>\n  </div> -->\n</template>\n\n<script>\n// import axios from \"axios\";\n// export default {\n//   //components: { Cadran },\n//   data() {\n//     return {\n//       currentDate() {\n//         const current = new Date();\n\n//         return date;\n//       },\n//       task: \"\",\n//       desc: \"\",\n//       tasks: [],\n//       togglenote: true,\n//       shownote: false,\n//       addnotes: true,\n//     };\n//   },\n//   mounted() {\n//     this.getNotes();\n//   },\n//   // updated() {\n//   //   this.getNotes();\n//   // },\n//   methods: {\n//     getNotes() {\n//       axios.get(\"https://post-it-7m1i.onrender.com/notes\").then((res) => {\n//         this.tasks = res.data.notes;\n//       });\n//     },\n//     addnote() {\n//       this.shownote = !this.shownote;\n//     },\n//     deleteNote(index) {\n//       if (confirm(\"Are you sure you want to delete this note?\")) {\n//         let noteId = this.tasks[index]._id;\n//         axios\n//           .delete(`https://post-it-7m1i.onrender.com/notes/${noteId}`)\n//           .then((res) => {\n//             this.tasks.splice(index, 1);\n//           });\n//       }\n//     },\n//     submitNote() {\n//       if (this.task.length == 0 || this.desc.length == 0) {\n//         return;\n//       }\n//       axios.post(\"https://post-it-7m1i.onrender.com/notes\", {\n//         title: this.task,\n//         content: this.desc,\n//       });\n\n//       this.shownote = !this.shownote;\n//       this.task = \"\";\n//       this.desc = \"\";\n//     },\n//   },\n// };\n</script>\n\n"],"mappings":";AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"script","externalDependencies":[]}