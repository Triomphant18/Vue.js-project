{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport axios from \"axios\";\nexport default createStore({\n  state: {\n    notes: []\n  },\n  getters: {\n    allNotes: state => state.notes\n  },\n  actions: {\n    async getNotes({\n      commit\n    }) {\n      const res = await axios.get(\"https://post-it-7m1i.onrender.com/notes\");\n      commit('setNotes', res.data.notes.reverse());\n    },\n    async submitNote({\n      commit,\n      dispatch\n    }, loadnote) {\n      const res = await axios.post(\"https://post-it-7m1i.onrender.com/notes\", loadnote);\n      commit('newPost', res.data);\n      dispatch('getNotes'); // dispatch the getNotes action to update the notes list after submitting a new note\n    },\n\n    async deleteNote({\n      commit,\n      dispatch\n    }, id) {\n      await axios.delete(\"https://post-it-7m1i.onrender.com/notes\");\n      commit('newPost', res.data);\n      dispatch('getNotes'); // dispatch the getNotes action to update the notes list after submitting a new note\n    }\n  },\n\n  mutations: {\n    setNotes: (state, notes) => state.notes = notes,\n    newPost: (state, note) => state.notes.push(note)\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","axios","state","notes","getters","allNotes","actions","getNotes","commit","res","get","data","reverse","submitNote","dispatch","loadnote","post","deleteNote","id","delete","mutations","setNotes","newPost","note","push","modules"],"sources":["/home/triomphant/Documents/TITA/MVVC/test2/mypostit/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport axios from \"axios\"\n\nexport default createStore({\n  state: {\n    notes: [],\n  },\n  getters: {\n    allNotes: (state) => state.notes\n  },\n  actions: {\n    async getNotes({ commit }) {\n      const res = await axios.get(\"https://post-it-7m1i.onrender.com/notes\");\n      commit('setNotes', res.data.notes.reverse())\n    },\n    async submitNote({ commit,  dispatch }, loadnote) {\n      const res = await axios.post(\"https://post-it-7m1i.onrender.com/notes\", loadnote)\n      commit('newPost', res.data);\n      dispatch('getNotes'); // dispatch the getNotes action to update the notes list after submitting a new note\n    },\n    async deleteNote({ commit, dispatch }, id) {\n      await axios.delete(\"https://post-it-7m1i.onrender.com/notes\")\n      commit('newPost', res.data);\n      dispatch('getNotes'); // dispatch the getNotes action to update the notes list after submitting a new note\n    },\n\n\n\n\n\n\n\n\n  },\n  mutations: {\n    setNotes: (state, notes) => state.notes = notes,\n    newPost: (state, note) => state.notes.push(note)\n  },\n  modules: {\n  }\n})\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,KAAK,EAAE;EACT,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQ,EAAGH,KAAK,IAAKA,KAAK,CAACC;EAC7B,CAAC;EACDG,OAAO,EAAE;IACP,MAAMC,QAAQA,CAAC;MAAEC;IAAO,CAAC,EAAE;MACzB,MAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,yCAAyC,CAAC;MACtEF,MAAM,CAAC,UAAU,EAAEC,GAAG,CAACE,IAAI,CAACR,KAAK,CAACS,OAAO,EAAE,CAAC;IAC9C,CAAC;IACD,MAAMC,UAAUA,CAAC;MAAEL,MAAM;MAAGM;IAAS,CAAC,EAAEC,QAAQ,EAAE;MAChD,MAAMN,GAAG,GAAG,MAAMR,KAAK,CAACe,IAAI,CAAC,yCAAyC,EAAED,QAAQ,CAAC;MACjFP,MAAM,CAAC,SAAS,EAAEC,GAAG,CAACE,IAAI,CAAC;MAC3BG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;IACxB,CAAC;;IACD,MAAMG,UAAUA,CAAC;MAAET,MAAM;MAAEM;IAAS,CAAC,EAAEI,EAAE,EAAE;MACzC,MAAMjB,KAAK,CAACkB,MAAM,CAAC,yCAAyC,CAAC;MAC7DX,MAAM,CAAC,SAAS,EAAEC,GAAG,CAACE,IAAI,CAAC;MAC3BG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;IACxB;EASF,CAAC;;EACDM,SAAS,EAAE;IACTC,QAAQ,EAAEA,CAACnB,KAAK,EAAEC,KAAK,KAAKD,KAAK,CAACC,KAAK,GAAGA,KAAK;IAC/CmB,OAAO,EAAEA,CAACpB,KAAK,EAAEqB,IAAI,KAAKrB,KAAK,CAACC,KAAK,CAACqB,IAAI,CAACD,IAAI;EACjD,CAAC;EACDE,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}